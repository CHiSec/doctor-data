# coding:utf-8
import random

import requests
import simplejson as json
from fake_useragent import UserAgent
from bs4 import BeautifulSoup

ua = UserAgent()
ip_list = ["61.142.72.154:30074", "116.209.55.212:9999", "113.121.20.175:9999", "61.142.72.154:30074", "116.209.55.212:9999", "210.22.176.146:32153", "61.178.238.122:63000", "117.91.232.29:9999", "120.79.5.147:80", "113.121.20.175:9999", "116.226.30.99:23092", "60.166.116.134:8118", "119.102.188.173:9999", "112.85.164.30:9999", "121.31.137.112:8123", "119.102.189.158:9999", "119.102.188.147:9999", "119.102.189.150:9999", "1.197.203.223:9999", "116.209.58.68:9999", "125.123.138.7:9999", "116.209.55.236:9999", "218.91.112.43:9999", "111.177.113.59:9999", "112.85.128.74:9999", "118.181.226.216:36430", "121.233.207.17:9999", "116.209.52.151:9999", "171.41.85.62:9999", "171.41.85.164:9999", "116.209.52.169:9999", "171.41.84.54:9999", "171.41.85.200:9999", "171.41.84.211:9999", "171.41.84.99:9999", "171.41.84.92:9999", "221.206.100.133:34073", "61.176.223.7:58822", "171.41.86.69:9999", "171.41.84.74:9999", "1.197.204.151:9999", "171.41.84.183:9999", "171.41.85.95:9999", "222.189.190.82:9999", "171.41.85.45:9999", "171.41.85.71:9999", "171.41.85.246:9999", "171.41.85.128:9999", "171.41.86.40:9999", "171.41.85.230:9999", "123.169.34.187:9999", "171.41.85.187:9999", "171.41.84.231:9999", "121.31.137.214:8123", "111.177.113.116:9999", "118.187.58.34:53281", "114.230.69.198:9999", "1.197.203.183:9999", "116.209.54.21:9999", "1.198.73.198:9999", "180.119.141.95:8090", "49.86.182.176:9999", "122.192.29.64:9999", "116.209.59.223:9999", "116.209.53.49:9999", "218.75.69.50:39590", "112.87.68.8:9999", "116.208.11.62:9999", "1.197.203.174:9999", "112.87.70.52:9999", "116.209.55.177:9999", "123.163.96.134:9999", "121.31.168.47:8123", "36.33.32.158:59019", "112.85.130.253:9999", "112.85.129.199:9999", "116.209.55.186:9999", "112.85.169.77:9999", "116.209.54.211:9999", "116.209.53.232:9999", "222.189.190.88:9999", "113.121.21.51:9999", "223.241.116.118:8010", "113.121.23.224:9999", "1.198.73.195:9999", "180.119.141.107:9999", "121.31.168.37:8123", "119.254.94.71:42788", "116.209.56.124:9999", "171.80.112.213:9999", "116.209.54.43:9999", "222.189.191.189:9999", "171.41.82.172:9999", "171.41.82.142:9999", "171.41.81.204:9999", "125.40.109.154:31610", "116.209.53.194:9999", "171.41.81.202:25305", "112.85.149.12:9999", "116.209.54.246:9999", "210.5.10.87:53281", "171.41.81.253:9999", "171.41.80.245:9999", "61.142.72.154:30074", "116.209.55.212:9999", "113.121.20.175:9999", "61.142.72.154:30074", "116.209.55.212:9999", "210.22.176.146:32153", "61.178.238.122:63000", "117.91.232.29:9999", "120.79.5.147:80", "113.121.20.175:9999", "116.226.30.99:23092", "60.166.116.134:8118", "119.102.188.173:9999", "112.85.164.30:9999", "121.31.137.112:8123", "119.102.189.158:9999", "119.102.188.147:9999", "119.102.189.150:9999", "1.197.203.223:9999", "116.209.58.68:9999", "125.123.138.7:9999", "116.209.55.236:9999", "218.91.112.43:9999", "111.177.113.59:9999", "112.85.128.74:9999", "118.181.226.216:36430", "121.233.207.17:9999", "116.209.52.151:9999", "171.41.85.62:9999", "171.41.85.164:9999", "116.209.52.169:9999", "171.41.84.54:9999", "171.41.85.200:9999", "171.41.84.211:9999", "171.41.84.99:9999", "171.41.84.92:9999", "221.206.100.133:34073", "61.176.223.7:58822", "171.41.86.69:9999", "171.41.84.74:9999", "1.197.204.151:9999", "171.41.84.183:9999", "171.41.85.95:9999", "222.189.190.82:9999", "171.41.85.45:9999", "171.41.85.71:9999", "171.41.85.246:9999", "171.41.85.128:9999", "171.41.86.40:9999", "171.41.85.230:9999", "123.169.34.187:9999", "171.41.85.187:9999", "171.41.84.231:9999", "121.31.137.214:8123", "111.177.113.116:9999", "118.187.58.34:53281", "114.230.69.198:9999", "1.197.203.183:9999", "116.209.54.21:9999", "1.198.73.198:9999", "180.119.141.95:8090", "49.86.182.176:9999", "122.192.29.64:9999", "116.209.59.223:9999", "116.209.53.49:9999", "218.75.69.50:39590", "112.87.68.8:9999", "116.208.11.62:9999", "1.197.203.174:9999", "112.87.70.52:9999", "116.209.55.177:9999", "123.163.96.134:9999", "121.31.168.47:8123", "36.33.32.158:59019", "112.85.130.253:9999", "112.85.129.199:9999", "116.209.55.186:9999", "112.85.169.77:9999", "116.209.54.211:9999", "116.209.53.232:9999", "222.189.190.88:9999", "113.121.21.51:9999", "223.241.116.118:8010", "113.121.23.224:9999", "1.198.73.195:9999", "180.119.141.107:9999", "121.31.168.37:8123", "119.254.94.71:42788", "116.209.56.124:9999", "171.80.112.213:9999", "116.209.54.43:9999", "222.189.191.189:9999", "171.41.82.172:9999", "171.41.82.142:9999", "171.41.81.204:9999", "125.40.109.154:31610", "116.209.53.194:9999", "171.41.81.202:25305", "112.85.149.12:9999", "116.209.54.246:9999", "210.5.10.87:53281", "171.41.81.253:9999", "171.41.80.245:9999"]


def get_ip_list(url):
    try:
        web_data = requests.get(url, headers=get_header(), proxies=get_random_ip(), timeout=3)
    except Exception as e:
        print(e)
        return get_ip_list(url)
    soup = BeautifulSoup(web_data.text, 'html')
    ips = soup.find_all('tr')
    for i in range(1, len(ips)):
        ip_info = ips[i]
        tds = ip_info.find_all('td')
        ip_list.append(tds[1].text + ':' + tds[2].text)
    # # 检测ip可用性，移除不可用ip：（这里其实总会出问题，你移除的ip可能只是暂时不能用，剩下的ip使用一次后可能之后也未必能用）
    # for ip in ip_list:
    #     try:
    #         proxy_host = "https://" + ip
    #         proxy_temp = {"https": proxy_host}
    #         res = urllib.urlopen(url, proxies=proxy_temp).read()
    #     except Exception as e:
    #         ip_list.remove(ip)
    #         continue
    # return ip_list


def get_random_ip():
    proxy_list = []
    for ip in ip_list:
        proxy_list.append('http://' + ip)
    proxy_ip = random.choice(proxy_list)
    proxies = {'http': proxy_ip}
    return proxies


def get_header():
    # user_agent = [
    #     "Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36",
    #     "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36",
    #     "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:30.0) Gecko/20100101 Firefox/30.0"
    #     "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/537.75.14",
    #     "Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident/6.0)",
    #     "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.63 Safari/537.36"
    # ]
    # return {'User-Agent': random.choice(user_agent)}
    return {'User-Agent': ua.random}


# 导出
for i in range(300):
    if i > 0:
        url = 'http://www.xicidaili.com/nn/'+str(i)
        print(url)
        get_ip_list(url)
    output = open('./data/ip_list.json', 'w+')
    output.write(json.dumps(ip_list))
    output.close()

